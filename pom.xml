<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>

	<groupId>com.jlr.ddc</groupId>
	<artifactId>servicebase</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>

	<name>servicebase</name>
	<description>Base project for RMM Level 3 SpringBoot REST microservice</description>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>2.0.6.RELEASE</version>
	</parent> 

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<java.version>1.8</java.version>
	</properties>

	<dependencies>
	
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-jpa</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-hateoas</artifactId>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
		
		<!--  included explicitly to avoid javadoc generation error
		      due to a conflict with a class used by @Transactional annotation -->
		<dependency>
            <groupId>javax.interceptor</groupId>
            <artifactId>javax.interceptor-api</artifactId>
            <version>1.2</version>
        </dependency>

		<dependency>
			<groupId>com.h2database</groupId>
			<artifactId>h2</artifactId>
			<scope>runtime</scope>
		</dependency>
		
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger2</artifactId>
		    <version>2.8.0</version>
		</dependency>
		
		<dependency>
		    <groupId>io.springfox</groupId>
		    <artifactId>springfox-swagger-ui</artifactId>
		    <version>2.8.0</version>
		</dependency>
		
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		
	</dependencies>

	<build>
	
		<plugins>
		
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			        
			<plugin>
		        <groupId>org.apache.maven.plugins</groupId>
		        <artifactId>maven-javadoc-plugin</artifactId>
		        <executions>
		            <execution>
		                <id>attach-javadocs</id>
		                <goals>
		                    <goal>jar</goal>
		                </goals>
		            </execution>
		        </executions>
		    </plugin>

			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.1</version>
            	<configuration>
                	<source>1.8</source>
                	<target>1.8</target>
            	</configuration>
			</plugin>
		    
		    <plugin>
	            <groupId>org.apache.maven.plugins</groupId>
	            <artifactId>maven-checkstyle-plugin</artifactId>
	            <version>3.0.0</version>
	            <dependencies>
                    <dependency>
                        <groupId>com.puppycrawl.tools</groupId>
                        <artifactId>checkstyle</artifactId>
                        <version>8.10</version>
                    </dependency>
                </dependencies>
	            <executions>
	                <execution>
	                    <id>validate</id><!--$NO-MVN-MAN-VER$-->
	                    <phase>validate</phase>
	                    <configuration>
	                        <configLocation>jlr-checkstyle.xml</configLocation>
	                        <encoding>UTF-8</encoding>
	                        <consoleOutput>true</consoleOutput>
	                        <failsOnError>true</failsOnError>
	                        <linkXRef>false</linkXRef>
	                    </configuration>
	                    <goals>
	                        <goal>check</goal>
	                    </goals>
	                </execution>
	            </executions>
	        </plugin>
	        
	        <plugin>
				<artifactId>maven-surefire-plugin</artifactId>
				<configuration>
					<!-- Sets the VM argument line used when unit tests are run. -->
				    <argLine>${surefireArgLine}</argLine>
				</configuration>
			 </plugin>
	        
	        <plugin>
			    <groupId>org.jacoco</groupId>
			    <artifactId>jacoco-maven-plugin</artifactId>
			    <version>0.8.1</version>
			    <executions>
			        <!--
			          Prepares the property pointing to the JaCoCo runtime agent which
			          is passed as VM argument when Maven the Surefire plugin is executed.
			        -->
			        <execution>
			            <id>pre-unit-test</id>
			            <goals>
			                <goal>prepare-agent</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			                <destFile>target/coverage-reports/jacoco-ut.exec</destFile>
			                <!--
			                    Sets the name of the property containing the settings
			                    for JaCoCo runtime agent.
			                -->
			                <propertyName>surefireArgLine</propertyName>
			            </configuration>
			        </execution>
			
			        <!--
			            Ensures that the code coverage report for unit tests is created after
			            unit tests have been run.
			        -->
			        <execution>
			            <id>post-unit-test</id>
			            <phase>test</phase>
			            <goals>
			                <goal>report</goal>
			            </goals>
			            <configuration>
			                <!-- Sets the path to the file which contains the execution data. -->
			            <dataFile>target/coverage-reports/jacoco-ut.exec</dataFile>
			                <!-- Sets the output directory for the code coverage report. -->
			                <outputDirectory>target/coverage-reports/jacoco-ut</outputDirectory>
			            </configuration>
			        </execution>
			    </executions>
			</plugin>
	        
		</plugins>
		
	</build>
	
	<reporting>
	
	    <plugins>
	    
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-surefire-report-plugin</artifactId>
	        <version>2.21.0</version>
	      </plugin>
	      
	      <plugin>
	        <groupId>org.apache.maven.plugins</groupId>
	        <artifactId>maven-checkstyle-plugin</artifactId>
	        <version>3.0.0</version>
	        <configuration>
	          <configLocation>jlr-checkstyle.xml</configLocation>
	        </configuration>
	      </plugin>
	      
	    </plugins>
	    
	</reporting>

</project>
